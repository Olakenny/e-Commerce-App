{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL } from \"../constants/userConstants\";\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstant';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/users/login/', {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.remove('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    ORDER_LIST_MY_RESET\n  });\n  dispatch({\n    USER_LIST_RESET\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/users/register/', {\n      'name': name,\n      'email': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/users/${id}/`, config);\n    dispatch({\n      type: USER_DETAIL_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/users/profile/update/`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/users/`, config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const deletetUsers = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`/users/delete/${id}`, config);\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const updateUsers = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`/users/delete/${id}`, config);\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/HP/Desktop/ecommerce/frontend/src/actions/userActions.js"],"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","ORDER_LIST_MY_RESET","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","logout","remove","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","USER_DETAIL_SUCCESS","updateUserProfile","user","listUsers","deletetUsers","delete","updateUsers"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { \r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n} from \"../constants/userConstants\"\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstant'\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({ type: USER_LOGIN_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }\r\n        }\r\n       \r\n        const { data } = await axios.post(\r\n            '/users/login/',\r\n            {'username': email, 'password': password},\r\n            config\r\n            ) \r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    }catch (error){\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            :error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) =>{\r\n    localStorage.remove('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ ORDER_LIST_MY_RESET })\r\n    dispatch({ USER_LIST_RESET })\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({ type: USER_REGISTER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            }   \r\n        }\r\n       \r\n        const { data } = await axios.post(\r\n            '/users/register/',\r\n            {'name': name, 'email': email, 'password': password},\r\n            config\r\n            ) \r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    }catch (error){\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            :error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({ type: USER_DETAILS_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n           \r\n        } =  getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }   \r\n        }\r\n       \r\n        const { data } = await axios.get(\r\n            `/users/${id}/`,\r\n            \r\n            config\r\n            ) \r\n\r\n        dispatch({\r\n            type: USER_DETAIL_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    \r\n    }catch (error){\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            :error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({ type: USER_UPDATE_PROFILE_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n           \r\n        } =  getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }   \r\n        }\r\n       \r\n        const { data } = await axios.get(\r\n           `/users/profile/update/`,\r\n            user,\r\n            config\r\n            ) \r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    \r\n    }catch (error){\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            :error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers= () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({ type: USER_LIST_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n           \r\n        } =  getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }   \r\n        }\r\n       \r\n        const { data } = await axios.get(\r\n           `/users/`,\r\n            config\r\n            ) \r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n \r\n    }catch (error){\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            :error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const deletetUsers= (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({ type: USER_DELETE_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n           \r\n        } =  getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }   \r\n        }\r\n       \r\n        const { data } = await axios.delete(\r\n           `/users/delete/${id}`,\r\n            config\r\n            ) \r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data,\r\n        })\r\n \r\n    }catch (error){\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            :error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const updateUsers= (user) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({ type: USER_DELETE_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n           \r\n        } =  getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }   \r\n        }\r\n       \r\n        const { data } = await axios.delete(\r\n           `/users/delete/${id}`,\r\n            config\r\n            ) \r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data,\r\n        })\r\n \r\n    }catch (error){\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            :error.message,\r\n        })\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}