{"ast":null,"code":"import axios from 'axios';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL } from '../constants/orderConstant';\nimport { CART_CLEAR_ITEM } from '../constants/cartConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/users/add/`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CART_CLEAR_ITEM,\n      payload: data\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/users//`, order, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CART_CLEAR_ITEM,\n      payload: data\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/HP/Desktop/ecommerce/frontend/src/actions/orderActions.js"],"names":["axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","CART_CLEAR_ITEM","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","localStorage","removeItem","error","response","detail","message","getOrderDetails","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAEIC,oBAFJ,EAGIC,oBAHJ,EAIIC,iBAJJ,EAMIC,qBANJ,EAOIC,qBAPJ,EAQIC,kBARJ,QAUO,4BAVP;AAYA,SAASC,eAAT,QAAgC,4BAAhC;AAIA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAChE,MAAG;AACCD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEX;AAAR,KAAD,CAAR;AAEA,UAAM;AACFY,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADT,QAGDH,QAAQ,EAHb;AAKA,UAAMI,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFnC;AADE,KAAf;AAOA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMnB,KAAK,CAACoB,IAAN,CACnB,aADmB,EAEnBX,KAFmB,EAGnBM,MAHmB,CAAvB;AAMAL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAACV,oBADA;AAELmB,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKAT,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAACL,eADA;AAELc,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKAG,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AAGH,GAlCD,CAkCC,OAAOC,KAAP,EAAa;AACVd,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAET,iBADD;AAELkB,MAAAA,OAAO,EAAEG,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO,MAAtC,GACPF,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO,MADb,GAERF,KAAK,CAACG;AAJF,KAAD,CAAR;AAOH;AACJ,CA5CM;AA8CP,OAAO,MAAMC,eAAe,GAAIC,EAAD,IAAQ,OAAOnB,QAAP,EAAiBC,QAAjB,KAA8B;AACjE,MAAG;AACCD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;AAEA,UAAM;AACFS,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADT,QAGDH,QAAQ,EAHb;AAKA,UAAMI,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFnC;AADE,KAAf;AAOA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMnB,KAAK,CAACoB,IAAN,CACnB,UADmB,EAEnBX,KAFmB,EAGnBM,MAHmB,CAAvB;AAMAL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAACP,qBADA;AAELgB,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKAT,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAACL,eADA;AAELc,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKAG,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AAGH,GAlCD,CAkCC,OAAOC,KAAP,EAAa;AACVd,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEN,kBADD;AAELe,MAAAA,OAAO,EAAEG,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO,MAAtC,GACPF,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO,MADb,GAERF,KAAK,CAACG;AAJF,KAAD,CAAR;AAOH;AACJ,CA5CM","sourcesContent":["import axios from 'axios'\r\n\r\nimport {\r\n    \r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL\r\n\r\n} from '../constants/orderConstant'\r\n\r\nimport { CART_CLEAR_ITEM } from '../constants/cartConstants'\r\n\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({ type: ORDER_CREATE_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n           \r\n        } =  getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }   \r\n        }\r\n       \r\n        const { data } = await axios.post(\r\n           `/users/add/`,\r\n            order,\r\n            config\r\n            ) \r\n\r\n        dispatch({\r\n            type:ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type:CART_CLEAR_ITEM,\r\n            payload: data,\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n    \r\n    \r\n    }catch (error){\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            :error.message,\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({ type: ORDER_DETAILS_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n           \r\n        } =  getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }   \r\n        }\r\n       \r\n        const { data } = await axios.post(\r\n           `/users//`,\r\n            order,\r\n            config\r\n            ) \r\n\r\n        dispatch({\r\n            type:ORDER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type:CART_CLEAR_ITEM,\r\n            payload: data,\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n    \r\n    \r\n    }catch (error){\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            :error.message,\r\n        })\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}