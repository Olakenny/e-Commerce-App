{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\ecommerce\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport { useDispactch, useSelector } from 'react-redux';\nimport { Message } from '../components/Message';\nimport { Loader } from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileScreen(_ref) {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const dispatch = useDispactch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    error,\n    loading,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin); // const {error, loading, user} = userLogin\n\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({\n          type: USER_UPDATE_PROFILE_RESET\n        });\n        dispatch(getUserDetails('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password != confirmPassword) {\n      setMessage('Password do not match');\n    } else {\n      dispatch(userUpdateProfile({\n        'id': user._id,\n        'name': name,\n        'email': email,\n        'password': password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"name\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"email\",\n            placeholder: \"Enter Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"passwordConfirm\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirm password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileScreen, \"E6FHRSt8ErEsAqGjkbEVETBXZX4=\", false, function () {\n  return [useDispactch, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/ecommerce/frontend/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","Link","Form","Row","Col","Button","useDispactch","useSelector","Message","Loader","getUserDetails","updateUserProfile","USER_UPDATE_PROFILE_RESET","ProfileScreen","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userDetails","state","error","loading","user","userLogin","userUpdateProfile","success","userInfo","push","type","submitHandler","e","preventDefault","_id","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Row, Col, Button } from 'react-bootstrap'\r\nimport { useDispactch, useSelector } from 'react-redux'\r\nimport { Message } from '../components/Message'\r\nimport { Loader } from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile  } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\n\r\n\r\nfunction ProfileScreen({ history }) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n\r\n    const dispatch = useDispactch()\r\n    \r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {error, loading, user} = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    // const {error, loading, user} = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const {success} = userUpdateProfile\r\n\r\n\r\n    useEffect(() =>{\r\n        if (!userInfo){\r\n            history.push('/login')\r\n        }else{\r\n            if(!user || !user.name || success){\r\n                dispatch({type: USER_UPDATE_PROFILE_RESET})\r\n                dispatch(getUserDetails('profile'))\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n  \r\n }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword){\r\n            setMessage('Password do not match')\r\n        }else{\r\n            dispatch(userUpdateProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password,\r\n            }))\r\n        }\r\n        \r\n    }\r\n  return (\r\n    <Row>\r\n        <Col md={3}>\r\n            <h2>User Profile</h2>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n\r\n        <Form.Group controlId='name'>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    type = 'name'\r\n                    placeholder = 'Enter Name'\r\n                    value = {name}\r\n                    onChange = {(e) => setName(e.target.value)}\r\n                >\r\n                </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                    required\r\n                    type = 'email'\r\n                    placeholder = 'Enter Email'\r\n                    value = {email}\r\n                    onChange = {(e) => setEmail(e.target.value)}\r\n                >\r\n                </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n               \r\n                    type = 'password'\r\n                    placeholder = 'Enter password'\r\n                    value = {password}\r\n                    onChange = {(e) => setPassword(e.target.value)}\r\n                >\r\n                </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='passwordConfirm'>\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                 \r\n                    type = 'password'\r\n                    placeholder = 'Confirm password'\r\n                    value = {confirmPassword}\r\n                    onChange = {(e) => setConfirmPassword(e.target.value)}\r\n                >\r\n                </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n                Update\r\n            </Button>\r\n\r\n        </Form>\r\n\r\n        </Col>\r\n\r\n        <Col md={9}>\r\n            <h2>My Order</h2>\r\n        </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen"]},"metadata":{},"sourceType":"module"}